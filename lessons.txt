Приобразование данных
X="25";
y=+x;
y=Namber(x);
parseInt(x);
parsefloat(x)?


logical
z=Boolean(x);
z=!!x;1

String

z=String(y);
z=y+"";

Цикл многократное выполнение группы операторов до достижения опред условия
Do {
While(условие)
}
While (условие ) {
}

for(){
}

for(in){}

FOR(of){}iter tor

Массивы
 Это объектный тип данных. Используется для хранения множества значений. Разного типа .

Размерность это ( длина массива )колличество элементов хранящихся в массиве

crud CREAT
2 формы создания массива
1 литеральная
var arr=[]; [1,8,true]
2 объектная
var arr=newArray();
var arr=newArray(20);      создаст массив из 20 элементов с индефами внутри .

Последовательность операторов кот выполняют вычисления над массивом
Arr.имя_свойства;
Arr.length; // namber int челочисленное (длина массива )
Arr.length=200 достроит массив до 200эллементов
Arr.length=0 уничтожает все данные в массиве .
Методы в массивах
Arr[arr.length]=5 приклеивает в конец массива значение
Arr.push(x) x любой тип  закидывает в конец значение .
.pop () удалить последний элемент ели x= то сохран знач в х
Arr.length= arr.length-1 -//-х

Срез массива
Arr.unshift(x) добавить элем в нач
Arr.shift() удалить элем с начала . Х= тоже сохранит элемент в

.slice(start I , end I) end не включая конец можно не указывать
Результат это новый массив
Удаление элементов из массива
.splice (I , k, r ) индекс колличество. . R можно заменить на это


Преобразование массива в строку
.join(sep)

.concat(arr) создаёт новый массив из двух старых
Копия. newarr=[].concat(arr)

.reverse () переворачивает массив

.sort(callback) можем передать функцию

Array.isArray(x) проверка на массив .

arr.:ncludes(x)



Дз массивы

Запросить число // 4
В один лог вывести
Триугольник сформированный из числа
*

*
****

И
****
*

*

И

****
 *

   *

   многомерный рандомный массив
   перестановка первой и поледней столбика
   сумма элементов в строке
   и столбце
   максимальный элемент заменить звездочкой